As we've established earlier in the course, most quantitative research studies focus on statistical inference. That's the process where you have some observed data from a sample of a population and you use it to build an underlying model to draw conclusions about the population. Probability is the study of how data can be generated from a model. This serves as the foundation for statistical inference. Understanding this will enable you to better appraise the quality of evidence from quantiative research studies. 

Let's begin by looking at one of the simplest processes for generating random data - the coin flip. By exploring coin flipping, you'll learn the basic laws and methods of probability. 

Each time I flip a fair coin, it has a fifty percent chance of being heads and a fifty percent chance of being tails. In statistical terms, we could describe flipping a coin as a random variable, and we would call one case of simulating from this random variable - a draw. If you don't have a coin handy, we can use the computer to simulate this random event. Specifically, we can use a function called rbinom. This is named because it's generates any number of random draws that you would like from a binomial distribution. We're going to learn about the binomial distribution in a moment. To generate the random variable using rbinom, we input three arguments. The first is the number of random draws we want to generate - or in other words, how many coin tosses we want to simulate. The second argument is the number of coins to flip on each draw - in this situation, it is just one. The third argument is the probability of the coin toss being heads, which for a fair coin is fifty percent. There are two possible outcomes - zero or 1. In this case we got a result of one. We will interpret the result of one as heads. The pound signs followed by 1 in square brackets just signals the output from the program - we can completely ignore it. 

But remember, what we are simulating here, is a random process, which means if we run the same lines of code again, we might get the same or a difference result. In this case, we get a zero - and we interpret that as tails.


